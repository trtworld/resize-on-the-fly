{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "TRT World - Resize on the fly CloudFormation template",
  "Parameters": {
    "BucketName": {
      "Description": "S3 bucket name",
      "Type": "String"
    },
    "ApiGatewayName": {
      "Description": "Rest api name",
      "Type": "String"
    }
  },
  "Resources": {
    "lambdaRoleResizeOnTheFly": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Path": "/"
      }
    },
    "policyS3Resize": {
      "DependsOn": [
        "lambdaRoleResizeOnTheFly"
      ],
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyName": "policyS3Resize",
        "Roles": [
          {
            "Ref": "lambdaRoleResizeOnTheFly"
          }
        ],
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Action": [
                "logs:*"
              ],
              "Resource": [
                "arn:aws:logs:*:*:*"
              ]
            },
            {
              "Action": [
                "s3:*"
              ],
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    {
                      "Ref": "BucketName"
                    },
                    "/*"
                  ]
                ]
              },
              "Effect": "Allow"
            }
          ]
        }
      }
    },
    "lambdaResizeOnTheFly": {
      "Type": "AWS::Lambda::Function",
      "DependsOn": [
        "lambdaRoleResizeOnTheFly",
        "policyS3Resize"
      ],
      "Properties": {
        "Environment": {
          "Variables": {
            "url": {
              "Fn::Join": [
                "",
                [
                  "http://",
                  {
                    "Fn::GetAtt": [
                      "cloudfront",
                      "DomainName"
                    ]
                  }
                ]
              ]
            },
            "bucket_name": {
              "Ref": "BucketName"
            },
            "cache_age": 86400
          }
        },
        "Code": {
          "S3Bucket": "trtworld-cloudformation",
          "S3Key": "resize-on-the-fly.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "lambdaRoleResizeOnTheFly",
            "Arn"
          ]
        },
        "Timeout": 60,
        "Handler": "index.handler",
        "Runtime": "nodejs6.10",
        "MemorySize": 640
      }
    },
    "S3": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "AccessControl": "PublicRead",
        "BucketName": {
          "Ref": "BucketName"
        },
        "CorsConfiguration": {
          "CorsRules": [
            {
              "AllowedHeaders": [
                "Authorization"
              ],
              "AllowedMethods": [
                "GET"
              ],
              "AllowedOrigins": [
                "*"
              ],
              "MaxAge": 3000
            }
          ]
        },
        "WebsiteConfiguration": {
          "IndexDocument": "index.html",
          "RoutingRules": [
            {
              "RedirectRule": {
                "HostName": {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Ref": "apigateway"
                      },
                      ".execute-api.",
                      {
                        "Ref": "AWS::Region"
                      },
                      ".amazonaws.com"
                    ]
                  ]
                },
                "HttpRedirectCode": "307",
                "Protocol": "https",
                "ReplaceKeyPrefixWith": "prod/resize-on-the-fly?key="
              },
              "RoutingRuleCondition": {
                "HttpErrorCodeReturnedEquals": "404"
              }
            }
          ]
        }
      }
    },
    "BucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "PolicyDocument": {
          "Id": "MyPolicy",
          "Version": "2012-10-17",
          "Statement": [
            {
              "Sid": "PublicReadForGetBucketObjects",
              "Effect": "Allow",
              "Principal": "*",
              "Action": "s3:GetObject",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:s3:::",
                    {
                      "Ref": "BucketName"
                    },
                    "/*"
                  ]
                ]
              }
            }
          ]
        },
        "Bucket": {
          "Ref": "BucketName"
        }
      }
    },
    "APILambdaPermission": {
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "lambdaResizeOnTheFly"
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:aws:execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "apigateway"
              },
              "/*/*/resize-on-the-fly"
            ]
          ]
        }
      },
      "Type": "AWS::Lambda::Permission"
    },
    "apigateway": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": {
          "Ref": "ApiGatewayName"
        },
        "Description": "API test",
        "FailOnWarnings": true
      }
    },
    "APIFirstResource": {
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "apigateway",
            "RootResourceId"
          ]
        },
        "PathPart": "resize-on-the-fly",
        "RestApiId": {
          "Ref": "apigateway"
        }
      },
      "Type": "AWS::ApiGateway::Resource"
    },
    "APImethodGET": {
      "Properties": {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "IntegrationResponses": [
            {
              "StatusCode": "200"
            }
          ],
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:aws:apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "lambdaResizeOnTheFly",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        },
        "MethodResponses": [
          {
            "StatusCode": "200"
          }
        ],
        "ResourceId": {
          "Ref": "APIFirstResource"
        },
        "RestApiId": {
          "Ref": "apigateway"
        }
      },
      "Type": "AWS::ApiGateway::Method"
    },
    "APIDeployment": {
      "DependsOn": "APImethodGET",
      "Properties": {
        "RestApiId": {
          "Ref": "apigateway"
        }
      },
      "Type": "AWS::ApiGateway::Deployment"
    },
    "APIStage": {
      "Properties": {
        "CacheClusterEnabled": false,
        "DeploymentId": {
          "Ref": "APIDeployment"
        },
        "RestApiId": {
          "Ref": "apigateway"
        },
        "StageName": "prod"
      },
      "Type": "AWS::ApiGateway::Stage"
    },
    "cloudfront": {
      "Type": "AWS::CloudFront::Distribution",
      "Properties": {
        "DistributionConfig": {
          "Origins": [
            {
              "DomainName": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Ref": "BucketName"
                    },
                    ".s3-website-",
                    {
                      "Ref": "AWS::Region"
                    },
                    ".amazonaws.com"
                  ]
                ]
              },
              "Id": "resizeS3Origin",
              "CustomOriginConfig": {
                "OriginProtocolPolicy": "http-only"
              }
            }
          ],
          "CacheBehaviors": [
            {
              "AllowedMethods": [
                "DELETE",
                "GET",
                "HEAD",
                "OPTIONS",
                "PATCH",
                "POST",
                "PUT"
              ],
              "TargetOriginId": "resizeS3Origin",
              "ForwardedValues": {
                "QueryString": "false",
                "Cookies": {
                  "Forward": "none"
                }
              },
              "ViewerProtocolPolicy": "allow-all",
              "DefaultTTL": "0",
              "PathPattern": "/*/*.png"
            },
            {
              "AllowedMethods": [
                "DELETE",
                "GET",
                "HEAD",
                "OPTIONS",
                "PATCH",
                "POST",
                "PUT"
              ],
              "TargetOriginId": "resizeS3Origin",
              "ForwardedValues": {
                "QueryString": "false",
                "Cookies": {
                  "Forward": "none"
                }
              },
              "ViewerProtocolPolicy": "allow-all",
              "DefaultTTL": "0",
              "PathPattern": "/*/*.jpg"
            },
            {
              "AllowedMethods": [
                "DELETE",
                "GET",
                "HEAD",
                "OPTIONS",
                "PATCH",
                "POST",
                "PUT"
              ],
              "TargetOriginId": "resizeS3Origin",
              "ForwardedValues": {
                "QueryString": "false",
                "Cookies": {
                  "Forward": "none"
                }
              },
              "ViewerProtocolPolicy": "allow-all",
              "DefaultTTL": "0",
              "PathPattern": "/*/*.jpeg"
            },
            {
              "AllowedMethods": [
                "DELETE",
                "GET",
                "HEAD",
                "OPTIONS",
                "PATCH",
                "POST",
                "PUT"
              ],
              "TargetOriginId": "resizeS3Origin",
              "ForwardedValues": {
                "QueryString": "false",
                "Cookies": {
                  "Forward": "none"
                }
              },
              "ViewerProtocolPolicy": "allow-all",
              "DefaultTTL": "0",
              "PathPattern": "/*/*.JPEG"
            },
            {
              "AllowedMethods": [
                "DELETE",
                "GET",
                "HEAD",
                "OPTIONS",
                "PATCH",
                "POST",
                "PUT"
              ],
              "TargetOriginId": "resizeS3Origin",
              "ForwardedValues": {
                "QueryString": "false",
                "Cookies": {
                  "Forward": "none"
                }
              },
              "ViewerProtocolPolicy": "allow-all",
              "DefaultTTL": "0",
              "PathPattern": "/*/*.JPG"
            },
            {
              "AllowedMethods": [
                "DELETE",
                "GET",
                "HEAD",
                "OPTIONS",
                "PATCH",
                "POST",
                "PUT"
              ],
              "TargetOriginId": "resizeS3Origin",
              "ForwardedValues": {
                "QueryString": "false",
                "Cookies": {
                  "Forward": "none"
                }
              },
              "ViewerProtocolPolicy": "allow-all",
              "DefaultTTL": "0",
              "PathPattern": "/*/*.PNG"
            }
          ],
          "Enabled": "true",
          "Comment": "resize-on-the-fly",
          "DefaultRootObject": "index.html",
          "DefaultCacheBehavior": {
            "TargetOriginId": "resizeS3Origin",
            "ForwardedValues": {
              "QueryString": "false",
              "Cookies": {
                "Forward": "none"
              }
            },
            "ViewerProtocolPolicy": "allow-all"
          }
        }
      }
    }
  }
}